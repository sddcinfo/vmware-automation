[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "vmware-automation"
version = "1.0.0"
description = "Enterprise-grade automation suite for creating Ubuntu 24.04 VMs in VMware Workstation with cloud-init provisioning, comprehensive logging, and configuration validation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "SDDC Info", email = "admin@sddc.info"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Installation/Setup",
    "Topic :: System :: Systems Administration",
]
keywords = [
    "vmware", "vmware-workstation", "automation", "ubuntu", "ubuntu-24-04",
    "cloud-init", "virtualization", "vm-automation", "infrastructure",
    "devops", "python", "enterprise", "vm-lifecycle", "unattended-installation"
]
requires-python = ">=3.8"
dependencies = [
    "pycdlib>=1.14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.950",
    "pre-commit>=2.17.0",
]

[project.urls]
Homepage = "https://github.com/sddcinfo/vmware-automation"
Repository = "https://github.com/sddcinfo/vmware-automation"
Issues = "https://github.com/sddcinfo/vmware-automation/issues"

[project.scripts]
create-vm = "create_vm:main"
cleanup-vm = "cleanup:main"
create-cidata = "create_cidata_iso:create_cidata_iso"

[tool.setuptools]
packages = ["."]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["vmware-automation"]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "build", "dist"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
